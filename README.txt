***** Board 2028 Program *****
*** FEATURES ***this program consists of three files.** File1: Board_2048.py **this file contains the design of class Board that includes basic attributes and methods for running the game.  constructor:  __init__(board, size, score):  board:   a dictionary that will be displayed in the form of a 4x4 sized board on screen by python Turtle.    
  size:  edge length of the grid, namely the number of tiles on each side.  
  score:   accumulated value of merged numbers  methods:   new_board(num_list):   this method assigns key-value pairs to the board dictionary with a length of size*size. 
  All values are 0 except two values randomly chosen and got replaced by random numbers from num_list.  num_list: [2, 4] by default  challenge(bigger_size):   this method asks user to input larger board size and initialize a new board game.  bigger_size: a number bigger than 4.  up_down_move(option):   this method moves the tiles in given vertical direction by pressing arrow keys on the screen.   option = 0: 'Up' arrow; option = 1: 'Down' arrow    left_right_move(option):  this method moves the tiles in given horizontal direction by pressing arrow keys on the screen.   option = 0: 'Left' arrow; option = 1: 'Right' arrow    up_down_merge(dir):  this method merges neighboring tiles of the same number in given vertical direction by substitute
  one of the numbers with its doubled value and the other with 0.  dir = 1: 'Up' arrow; dir = -1: 'Down' arrow  left_right_merge(dir):  this method merges neighboring tiles of the same number in given horizontal direction by substitute
  one of the numbers with its doubled value and the other with 0.  dir = 1: 'Left' arrow; dir = -1: 'Right' arrow    add_number:  this method randomly selects a key-value pair in board dictionary where the value is 0 and re-assign 
  the value 2 or 4.  copy_board:  this method returns a shadow copy of the current object.  shift_up:  this method is a collective of four steps to accomplish an 'Up' shift from the user. 
  the outcome is a combine of move, merge and add if all rules are met.  shift_down:  this method is a collective of four steps to accomplish a 'Down' shift from the user. 
  the outcome is a combine of move, merge and add if all rules are met.    shift_left:  this method is a collective of four steps to accomplish a 'Left' shift from the user. 
  the outcome is a combine of move, merge and add if all rules are met.  
  shift_right  this method is a collective of four steps to accomplish a 'Right' shift from the user. 
  the outcome is a combine of move, merge and add if all rules are met.    __str__:  this method prints out the board dictionary in specific forms, namely an 4x4 array in the terminal.  __eq__(other):  this method compares current Board instance with other and return True if all attributes are the same.  is_win:  this method prints out win message if a tile numbered 2048 appears on the board.  is_lose:  this method prints out 'game over' message if the board is full, no merge could be achieved 
  and no 2048 appears on board.** File2: main.py **main:this function initializes the game and interact with user during the game.quit_game:this function quits turtle window any time during the game.draw_board_bg:this function presents background settings including a menu and a tile.draw_board:this function update board on the screen after interactions with user each time during the game.draw_lose:this function prints out game over on turtle screen.draw_win:this function prints out win message on turtle screen. ** File3: test_Board.py **test the constructor, all the methods and error cases in File1. *** INSTRUCTIONS ***1. start a new gameon running the program, only menu is shown on Turtle screen. user could choose from menu options 
such as 1, 2, 3 to initialize the board.
press 1 to start a 4x4 size game any time.press 2 to quit game any timepress 3 to challenge a bigger size game any time.2. game onduring the game. all menu options and array keys are available. press 1 to start a 4x4 size game any time.press 2 to quit game any timepress 3 to challenge a bigger size game any time.press 'Up' for up slidepress 'Down' for down slidepress 'Left' for left slidepress 'Right' for right slide3. game over or winwhen related message prints out, only menu options are available.*** CREDITS ***
feature1: tiles change filled color in accordance with the number on the tile. feature2: user may use challenge option on the menu to play a more difficult game.